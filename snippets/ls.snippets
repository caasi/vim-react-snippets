snippet r
	'react': { Component, PropTypes, { div }:DOM }:React
snippet radd
	'react/addons': { { PureRenderMixin, classSet:cx }:addons }
snippet cdm
	componentDidMount: (pprops, pstate) !-> ${1}
snippet cwm
	componentWillMount: !-> ${1}
snippet cwr
	componentWillReceiveProps: (nprops) !-> ${1}
snippet cwun
	componentWillUnmount: !-> ${1}
snippet cwu
	componentWillUpdate: (nprops, nstate) !-> ${1}
snippet cx
	cx do
		${1}: ${2}
snippet fup
	forceUpdate ${1:callback}
snippet pt
	@propTypes =
		${1}: PropTypes.${2}
snippet dp
	@defaultProps =
		${1}: ${2}
snippet ism
	isMounted!
snippet rcc
	require! {
		'react': { Component, PropTypes, { div }:DOM }:Recat
		'react/addons': { { PureRenderMixin, classSet:cx }:addons }
	}

	class ${1:ClassName} extends Components implements PureRenderMixin
		(@props) ->
		render: ->
			{ className = '', children = [] } = @props
			div do
				className: "${2} #className"
				${3}
				children

	module.exports = $1
snippet rccc
	require! {
		'react': { Component, PropTypes, { div }:DOM }:Recat
		'react/addons': { { PureRenderMixin, classSet:cx }:addons }
	}

	class ${1:ClassName} extends Components implements PureRenderMixin
		->
		render: -> div @state

	module.exports = $1
snippet ren
	render: -> ${1:div!}
snippet sst
	setState do
		${1}: ${2}
snippet scu
	shouldComponentUpdate: (nprops, nstate) -> ${1}
snippet dprops
	{ className = '', children = [] } = @props
snippet dstate
	{ ${1} } @state
